diff --git a/game/Core/gamesessionstatemachine.cpp b/game/Core/gamesessionstatemachine.cpp
index deef3f31..cc3322ef 100644
--- a/game/Core/gamesessionstatemachine.cpp
+++ b/game/Core/gamesessionstatemachine.cpp
@@ -446,6 +446,9 @@ void CGameSessionStateMachine::ProcessSteamVerification()
 
 void CGameSessionStateMachine::ProcessRequirePCEntitlement(void)
 {
+	SetState(LOAD_PROFILE, true);
+	return;
+#if 0
 #if RSG_ENTITLEMENT_ENABLED
 	CEntitlementManager::StartCheck();
 	
@@ -478,6 +481,7 @@ void CGameSessionStateMachine::ProcessRequirePCEntitlement(void)
 	m_bEntitlementUpdating = false;
 
 	SetState(LOAD_PROFILE, true);
+#endif
 }
 
 #endif // RSG_PC
diff --git a/game/frontend/boot_flow/BootupScreen.cpp b/game/frontend/boot_flow/BootupScreen.cpp
index 3031e164..092ce418 100644
--- a/game/frontend/boot_flow/BootupScreen.cpp
+++ b/game/frontend/boot_flow/BootupScreen.cpp
@@ -33,6 +33,8 @@ char CBootupScreen::m_JobButtonDisplayName[MAX_CUSTOM_BUTTON_TEXT];
 /////////////////////////////////////////////////////////////////////////////////////
 bool CBootupScreen::HasCompletedPrologue()
 {
+	return true;
+#if 0
 #if	!__FINAL
 	// command line parameter to skip completed prologue checks
 	if(PARAM_mpavailable.Get())
@@ -51,6 +53,7 @@ bool CBootupScreen::HasCompletedPrologue()
 	}
 
 	return false;
+#endif
 }
 
 /////////////////////////////////////////////////////////////////////////////////////
@@ -61,6 +64,8 @@ bool CBootupScreen::HasCompletedPrologue()
 /////////////////////////////////////////////////////////////////////////////////////
 bool CBootupScreen::CanSelectOnline()
 {
+	return true;
+#if 0
     bool result = NetworkInterface::IsLocalPlayerOnline() &&
         NetworkInterface::CheckOnlinePrivileges() &&
         !CLiveManager::GetInviteMgr().HasPendingAcceptedInvite();
@@ -68,6 +73,7 @@ bool CBootupScreen::CanSelectOnline()
     result = result && HasCompletedPrologue();
 #endif
     return result;
+#endif
 }
 
 #if RSG_SCE
diff --git a/game/network/Network.cpp b/game/network/Network.cpp
index 1b8c0f55..9a3f5c89 100644
--- a/game/network/Network.cpp
+++ b/game/network/Network.cpp
@@ -3301,6 +3301,8 @@ void CNetwork::SetSpPrologueRequired(const bool bIsRequired)
 
 bool CNetwork::IsSpPrologueRequired()
 {
+	return false;
+#if 0
 #if !__FINAL
 	int nCommandValue;
 	if(PARAM_netRequireSpPrologue.Get(nCommandValue))
@@ -3311,6 +3313,7 @@ bool CNetwork::IsSpPrologueRequired()
 #endif
 
 	return sm_bSpPrologueRequired;
+#endif
 }
 
 IntroSettingResult CNetwork::HasCompletedSpPrologue()
diff --git a/rage/base/src/file/packfile.cpp b/rage/base/src/file/packfile.cpp
index bddc5e87..82f0c979 100644
--- a/rage/base/src/file/packfile.cpp
+++ b/rage/base/src/file/packfile.cpp
@@ -59,7 +59,7 @@ PARAM(dumprpfinfo,"Dump RPF file info at mount time");
 // MaxPackfiles line used to have this comment after it:	
 	// If we raise this past 256 we'll need to decrement fiCollection::ArchiveShift again.
 // but it seems totally out of date - we have 16 bits worth of size to fit into and the no. of pack files has been >256 for a looooong time
-extern const int MaxPackfiles = 1024+718+650/*HD texture pack*/+256/*even more packs*/+256/*more DLC for 2018*/+256/*more DLC for 2019*/+256/*more DLC for 2020*/+256/*more DLC for 2021*/;	
+extern const int MaxPackfiles = 1024+718+650/*HD texture pack*/+256/*even more packs*/+256/*more DLC for 2018*/+256/*more DLC for 2019*/+256/*more DLC for 2020*/+256/*more DLC for 2021*/+256;	
 
 fiCollection* fiCollection::sm_Collections[MaxPackfiles];		// Entry 0 is never used. (except by the pgRawStreamer)
 
diff --git a/rage/base/src/rline/rl.h b/rage/base/src/rline/rl.h
index b453e623..5a9f87a0 100644
--- a/rage/base/src/rline/rl.h
+++ b/rage/base/src/rline/rl.h
@@ -369,7 +369,7 @@ enum rlEnvironment
 #if __MASTER
  #define RL_DEFAULT_ROS_ENVIRONMENT RLROS_ENV_PROD
 #else
- #define RL_DEFAULT_ROS_ENVIRONMENT RLROS_ENV_DEV
+ #define RL_DEFAULT_ROS_ENVIRONMENT RLROS_ENV_PROD
 #endif
 #endif
 
